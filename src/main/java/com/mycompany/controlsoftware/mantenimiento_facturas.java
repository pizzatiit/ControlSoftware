package com.mycompany.controlsoftware;

import com.google.gson.Gson;
import com.mycompany.controlsoftware.Entidades.Caja;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ING. JUNIOR MORALES
 */
public class mantenimiento_facturas extends javax.swing.JInternalFrame {

    /**
     * Creates new form seleccionarfactura
     */
    BaseDeDatos bd = new BaseDeDatos();

    public mantenimiento_facturas() {
        super("Usuario: " + new BaseDeDatos().valor("select user from usuario where cod_user=" + ControlSoftware.us) + ", Sucursal: " + new BaseDeDatos().valor("select company from company where id_company=" + ControlSoftware.cia));

        initComponents();

        bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia+" order by f.fechafactura desc", Productos);
        Productos.setDefaultRenderer(Object.class, new MiRenderer());
//        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh72.png")));
//        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add72.png")));
//        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel72.png")));
//        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer72.png")));
//        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar72.png")));
//        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back72.png")));
        String idcai = bd.valor("select caiid from company where id_company=" + ControlSoftware.cia);
        cactual.setText(bd.valor("select cai from historico_caifactura where id=" + idcai + " and cia=" + ControlSoftware.cia));
        ri.setText(bd.valor("select rango_inicial from historico_caifactura where id=" + idcai + " and cia=" + ControlSoftware.cia));
        rf.setText(bd.valor("select rango_final from historico_caifactura where id=" + idcai + " and cia=" + ControlSoftware.cia));
        fv.setText(bd.valor("select fecha_final from historico_caifactura where id=" + idcai + " and cia=" + ControlSoftware.cia));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pfecha = new javax.swing.JRadioButton();
        ninguno = new javax.swing.JRadioButton();
        todos = new javax.swing.JRadioButton();
        pnumero = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dnumero = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hnumero = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dfecha = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        hfecha = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        cliente = new javax.swing.JTextField();
        pcliente = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Productos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cactual = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ri = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fv = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(195, 180, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "FILTROS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        pfecha.setBackground(new java.awt.Color(195, 180, 225));
        buttonGroup1.add(pfecha);
        pfecha.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pfecha.setForeground(new java.awt.Color(0, 0, 0));
        pfecha.setText("POR FECHA");

        ninguno.setBackground(new java.awt.Color(195, 180, 225));
        buttonGroup1.add(ninguno);
        ninguno.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ninguno.setForeground(new java.awt.Color(0, 0, 0));
        ninguno.setSelected(true);
        ninguno.setText("NINGUNO");

        todos.setBackground(new java.awt.Color(195, 180, 225));
        buttonGroup1.add(todos);
        todos.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        todos.setForeground(new java.awt.Color(0, 0, 0));
        todos.setText("TODOS");

        pnumero.setBackground(new java.awt.Color(195, 180, 225));
        buttonGroup1.add(pnumero);
        pnumero.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pnumero.setForeground(new java.awt.Color(0, 0, 0));
        pnumero.setText("POR NUMERO");

        jPanel2.setBackground(new java.awt.Color(195, 180, 225));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR NUMERO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("DESDE");

        dnumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dnumeroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dnumeroKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("HASTA");

        hnumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hnumeroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hnumeroKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(dnumero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(hnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(195, 180, 225));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR FECHA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DESDE");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("HASTA");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(dfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(dfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(195, 180, 225));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cliente)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pcliente.setBackground(new java.awt.Color(195, 180, 225));
        buttonGroup1.add(pcliente);
        pcliente.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pcliente.setForeground(new java.awt.Color(0, 0, 0));
        pcliente.setText("POR CLIENTE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pcliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnumero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ninguno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ninguno)
                            .addComponent(todos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pfecha)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pnumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pcliente)))
                .addGap(7, 7, 7)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(195, 180, 225));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back24.png"))); // NOI18N
        jButton5.setText("REGRESAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print24.png"))); // NOI18N
        jButton6.setText("IMPRIMIR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel24.png"))); // NOI18N
        jButton3.setText("ANULAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add24.png"))); // NOI18N
        jButton2.setText("NUEVA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh24.png"))); // NOI18N
        jButton1.setText("REFRESCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jScrollPane1.setAutoscrolls(true);

        Productos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Productos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Productos.setSelectionBackground(new java.awt.Color(0, 0, 0));
        Productos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        Productos.getTableHeader().setReorderingAllowed(false);
        Productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductosMouseClicked(evt);
            }
        });
        Productos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Productos);

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("MANTENIMIENTO DE FACTURAS");

        jPanel8.setBackground(new java.awt.Color(195, 180, 225));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CAI ACTUAL:");

        cactual.setEditable(false);

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("HASTA");

        rf.setEditable(false);

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("RANGO DE");

        ri.setEditable(false);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("FECHA LIMITE DE FACTURACIÓN");

        fv.setEditable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ri, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rf, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cactual, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fv)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cactual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(ri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("CONTROLSOFTWARE - COPYRIGHT 2023 - ING. JUNIOR MORALES");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
            Date date1;
            date1 = dfecha.getDate();
            Date date2;
            date2 = hfecha.getDate();
            if (ninguno.isSelected()) {
                bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA,f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia+" order by f.fechafactura desc", Productos);
            } else if (pnumero.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty()) {
                bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia + " and f.numerofactura between " + dnumero.getText() + " and " + hnumero.getText()+" order by f.fechafactura desc", Productos);
            } else if (pfecha.isSelected() && !(date1 == null) && !(date2 == null)) {
                if (date2.compareTo(date1) == -1) {
                    JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                } else {
                    bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia + " and f.fechaingreso between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'"+" order by f.fechafactura desc", Productos);
                }
            } else if (pcliente.isSelected() && !cliente.getText().isEmpty()) {
                bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'"+" order by f.fechafactura desc", Productos);
            } else if (todos.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty() && !cliente.getText().isEmpty() && !dfecha.getDate().equals("") && !hfecha.getDate().equals("")) {
                if (date2.compareTo(date1) == -1) {
                    JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                } else {
                    bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'" + " and f.fechaingreso between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'" + " and f.numerofactura between " + dnumero.getText() + " and " + hnumero.getText()+" order by f.fechafactura desc", Productos);
                }

            } else {
                bd.LlenarTabla("select f.idfactura as ID, f.numerofactura as FACTURA_FISCAL, c.nombre as CLIENTE, v.vendedor as VENDEDOR, CASE f.condicionpago WHEN '1' THEN 'CONTADO' WHEN '0' THEN 'CREDITO' END as METODO_PAGO, CASE f.tipo WHEN '1' THEN 'ORIGINAL' WHEN '0' THEN 'CP' END as TIPOFACTURA, f.fechafactura as FECHA_FACTURA, f.fechaingreso as FECHA_INGRESO,  f.total as TOTAL,f.saldo as SALDO, CASE f.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'ABONADA' WHEN '3' THEN 'PAGADA' WHEN '0' THEN 'ANULADA' END AS ESTADO, CASE f.comprobado WHEN '1' THEN 'REALIZADO' WHEN '0' THEN 'PENDIENTE' END AS CHEQUEO  from factura as f inner join clientes as c on c.idcliente=f.idcliente inner join vendedor v on f.idvendedor=v.id_vendedor where f.cia=" + ControlSoftware.cia+" order by f.fechafactura desc", Productos);

            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductosKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductosKeyReleased

    private void ProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductosMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String perm = "73";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de ingresar facturas nuevas.");
            return;
        }
          try {
            URL url=new URL(ControlSoftware.url + "caja/getcaja" + "?idusuario=" + ControlSoftware.us + "&cia=" + ControlSoftware.cia + "&estado=" + 1);
            HttpURLConnection conn=(HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.connect();
            int responseCode=conn.getResponseCode();
            if(responseCode!=200){
                System.out.println(""+responseCode);
            }
            Scanner scanner=new Scanner(url.openStream());
            String salida="";
            while(scanner.hasNext()){
                salida+=scanner.nextLine();
            }
            scanner.close();
            Gson gson=new Gson();
            Caja[] caja=gson.fromJson(salida, Caja[].class);
            for(Caja v: caja){
                System.out.println(v);
            }
            if (caja.length>=1){
                  ingresarfactura l = new ingresarfactura("0");
                    Dimension internalFrameSize = l.getSize();
                    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                    l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                            (screenSize.height - internalFrameSize.height) / 2);
                    DESKSOFTWARE.escritorio.add(l);
                    l.show();
                    dispose();
            }else{
                JOptionPane.showMessageDialog(null,"No hay una caja abierta.");
                return;
            }
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(mantenimiento_ventas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(mantenimiento_ventas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void dnumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnumeroKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        if (!(key == '0' || key == '1' || key == '2' || key == '3' || key == '4' || key == '5' || key == '6' || key == '7' || key == '8' || key == '9' || key == '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_dnumeroKeyTyped

    private void dnumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnumeroKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_dnumeroKeyReleased

    private void hnumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hnumeroKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_hnumeroKeyReleased

    private void hnumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hnumeroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_hnumeroKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Ingreso_de_credenciales dialog = new Ingreso_de_credenciales("74");
        dialog.setModal(true);
        dialog.setVisible(true);  // AQUI DEBE ESPERAR A QUE INGRESE LOS DATOS PARA HACER LA SIGUIENTE CONDICION
        if (dialog.paso == false) {
            return;
        }
        
        
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        String usuario = bd.valor("Select user from usuario where cod_user=" + dialog.usuariot);
        try {
            if (Productos.getValueAt(Productos.getSelectedRow(), 9).equals("ANULADA")) {
                JOptionPane.showMessageDialog(null, "La factura ya está anulada");
                return;
            }

            String f = "" + Productos.getValueAt(Productos.getSelectedRow(), 0);
            int x = 0;
            x = JOptionPane.showConfirmDialog(null, "Está seguro de anular esta factura?");
            if (x == 0) {
                if (bd.versiesta("select d.idfactura from detalle_recibopago d inner join recibopago r on d.idrecibo=r.id_recibo where d.idfactura=" + f + " and r.tipo=2 and r.total!=0.0" + " and d.cia=" + ControlSoftware.cia)) {
                    //reversar pedido--------------------------------
                    if (!bd.valor("select op from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia).equals("0")) {
                        String orden_de_pedido_id = bd.valor("select op from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                        bd.EjecutarConsultas("update orden_de_pedido set estado=3 where idorden=" + orden_de_pedido_id);
                         System.out.println("hola");
                        String producto_a_reservar[] = bd.Llenar("select idproducto from detalle_orden_de_pedido where id_orden_de_pedido=" + orden_de_pedido_id + " and cia=" + ControlSoftware.cia, "idproducto");
                        System.out.println("hola");
                        for (int i = 0; i < producto_a_reservar.length; i++) {
                           
                            double qty = Double.parseDouble(bd.valor("select cantidad from detalle_orden_de_pedido where id_orden_de_pedido=" + orden_de_pedido_id + " and idproducto=" + producto_a_reservar[i] + " and cia=" + ControlSoftware.cia));
                            bd.EjecutarConsultas("update producto set reserva=reserva+" + qty + " where idproducto=" + producto_a_reservar[i] + " and cia=" + ControlSoftware.cia);
                        }
                    }
                    //-------------------------------------------

                    bd.EjecutarConsultas("update factura set subtotal=0.0, isv=0.0, total=0.0, estado=0 where idfactura=" + f);
                    String producto_a_rebajar[] = bd.Llenar("select idproducto from detalle_factura where idfactura=" + f, "idproducto");

                    for (int i = 0; i < producto_a_rebajar.length; i++) {
                        int qty = Integer.parseInt(bd.valor("select cantidad from detalle_factura where idfactura=" + f + " and idproducto=" + producto_a_rebajar[i] + " and cia=" + ControlSoftware.cia));
                        insertartransaccion(f, "3", Double.parseDouble(bd.valor("select existencia from producto where idproducto=" + producto_a_rebajar[i])), Double.parseDouble("" + qty), Double.parseDouble(bd.valor("select existencia from producto where idproducto=" + producto_a_rebajar[i])) + Double.parseDouble("" + qty), "" + producto_a_rebajar[i]);

                        bd.EjecutarConsultas("update producto set existencia=existencia+" + qty + " where idproducto=" + producto_a_rebajar[i] + " and cia=" + ControlSoftware.cia);
                    }
                    bd.EjecutarConsultas("update detalle_factura set cantidad=0, total=0, estado=0 where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                    bd.EjecutarConsultas("update detalle_recibopago set abono=0.0, estado='0', saldoanterior=0.0, nuevosaldo=0.0 where idfactura=" + f);
                    String h = bd.valor("select idrecibo from detalle_recibopago where idfactura=" + f);
                    bd.EjecutarConsultas("update recibopago_datos set estado=0, observacion='anulado por: " + usuario + ", fecha:" + LocalDateTime.now() + "' where idrecibo=" + h + " and cia=" + ControlSoftware.cia);
                    bd.EjecutarConsultas("update recibopago set total=0.0, descripcion='pago de contado, anulado', estado=0 where id_recibo=" + h + " and tipo=2");

                    String motivo_anulacion = "";
                    motivo_anulacion = JOptionPane.showInputDialog(null, "Ingrese el motivo de anulación.");
                    motivo_anulacion += ", anulado por: " + usuario;
                    bd.EjecutarConsultas("update factura set observacion='" + motivo_anulacion + "' where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                    try {
                        BaseDeDatos con = new BaseDeDatos();
                        Connection conn = con.getConexion();

                        String path = "/comprobanteanulacion.jasper";
                        InputStream inputStream = getClass().getResourceAsStream(path);
                        JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                        Map<String, Object> parametros = new HashMap<>();
                        parametros.put("factura", f);
                        parametros.put("user", dialog.usuariot);
                        JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                        // Crear el objeto JasperViewer y mostrar el reporte en pantalla
                        JasperViewer viewer = new JasperViewer(jasperPrint, false);
                        viewer.setVisible(true);

                    } catch (JRException ex) {
                        System.out.println("Error al generar el reporte: " + ex.getMessage());
                    }
                    jButton1.doClick();
                    return;
                }

                if (bd.valor("select condicionpago from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia).equals("0")) {
                    if (bd.versiesta("select d.idfactura from detalle_recibopago d inner join recibopago r on d.idrecibo=r.id_recibo where d.idfactura=" + f + " and (r.tipo=0 or r.tipo=1 or r.tipo=3 or r.tipo=4 or r.tipo=5) and r.total>0 and r.estado!=0" + " and d.cia=" + ControlSoftware.cia)) {
                        JOptionPane.showMessageDialog(null, "Debe anular primero los recibos que abonan a esta factura.");
                        return;
                    } else {

                        if (!bd.valor("select op from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia).equals("0")) {
                            String orden_de_pedido_id = bd.valor("select op from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                            bd.EjecutarConsultas("update orden_de_pedido set estado=3 where idorden=" + orden_de_pedido_id);
                            String producto_a_reservar[] = bd.Llenar("select idproducto from detalle_orden_de_pedido where id_orden_de_pedido=" + orden_de_pedido_id + " and cia=" + ControlSoftware.cia, "idproducto");
                            for (int i = 0; i < producto_a_reservar.length; i++) {
                                double qty = Double.parseDouble(bd.valor("select cantidad from detalle_orden_de_pedido where id_orden_de_pedido=" + orden_de_pedido_id + " and idproducto=" + producto_a_reservar[i] + " and cia=" + ControlSoftware.cia));
                                bd.EjecutarConsultas("update producto set reserva=reserva+" + qty + " where idproducto=" + producto_a_reservar[i] + " and cia=" + ControlSoftware.cia);
                            }
                        }
                        //-------------------------------------------
                        String sal = bd.valor("select saldo from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                        bd.EjecutarConsultas("update clientes set saldo=saldo-" + sal + " where idcliente=" + bd.valor("select idcliente from factura where idfactura=" + f + " and cia=" + ControlSoftware.cia));
                        bd.EjecutarConsultas("update factura set subtotal=0.0, isv=0.0, total=0.0, saldo=0.0, estado=0 where idfactura=" + f + " and cia=" + ControlSoftware.cia);

                        String producto_a_rebajar[] = bd.Llenar("select idproducto from detalle_factura where idfactura=" + f + " and cia=" + ControlSoftware.cia, "idproducto");

                        for (int i = 0; i < producto_a_rebajar.length; i++) {
                            int qty = Integer.parseInt(bd.valor("select cantidad from detalle_factura where idfactura=" + f + " and idproducto=" + producto_a_rebajar[i] + " and cia=" + ControlSoftware.cia));
                            insertartransaccion(f, "3", Double.parseDouble(bd.valor("select existencia from producto where idproducto=" + producto_a_rebajar[i])), Double.parseDouble("" + qty), Double.parseDouble(bd.valor("select existencia from producto where idproducto=" + producto_a_rebajar[i])) + Double.parseDouble("" + qty), "" + producto_a_rebajar[i]);
                            bd.EjecutarConsultas("update producto set existencia=existencia+" + qty + " where idproducto=" + producto_a_rebajar[i] + " and cia=" + ControlSoftware.cia);
                        }
                        bd.EjecutarConsultas("update detalle_factura set cantidad=0, total=0, estado=0 where idfactura=" + f + " and cia=" + ControlSoftware.cia);
                        String motivo_anulacion = "";
                        motivo_anulacion = JOptionPane.showInputDialog(null, "Ingrese el motivo de anulación.");
                        motivo_anulacion += ", anulado por: " + usuario;
                        bd.EjecutarConsultas("update factura set observacion='" + motivo_anulacion + "' where idfactura=" + f + " and cia=" + ControlSoftware.cia);

                        try {
                            BaseDeDatos con = new BaseDeDatos();
                            Connection conn = con.getConexion();
                            // Cargar el reporte desde el archivo .jasper
                            String path = "/comprobanteanulacion.jasper";
                            InputStream inputStream = getClass().getResourceAsStream(path);
                            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                            // Crear el objeto JasperPrint con los datos y el reporte
                            Map<String, Object> parametros = new HashMap<>();
                            parametros.put("factura", f);
                            parametros.put("user", dialog.usuariot);
                            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                            // Crear el objeto JasperViewer y mostrar el reporte en pantalla
                            JasperViewer viewer = new JasperViewer(jasperPrint, false);
                            viewer.setVisible(true);

                        } catch (JRException ex) {
                            System.out.println("Error al generar el reporte: " + ex.getMessage());
                        }
                        jButton1.doClick();
                        return;
                    }
                }

            }

        } catch (Exception e) {

        }

        jButton1.doClick();
    }//GEN-LAST:event_jButton3ActionPerformed
    public void insertartransaccion(String id, String tipo, Double saldoactual, Double cantidad, Double saldo_final, String producto) {
        bd.EjecutarConsultas("INSERT INTO `kardex`(`fecha`, `id_documento`, `tipo_documento`, `saldo_actual`, `cantidad`, `saldo_final`, `id_producto`, `cia`, `idusuario`, `estado`) VALUES ('" + LocalDateTime.now() + "','" + id + "','" + tipo + "','" + saldoactual + "','" + cantidad + "','" + saldo_final + "','" + producto + "','" + ControlSoftware.cia + "','" + ControlSoftware.us + "','1')");
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        mantenimiento_ventas l = new mantenimiento_ventas();
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String perm = "76";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de imprimir facturas nuevas.");
            return;
        }
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }

        if (Productos.getValueAt(Productos.getSelectedRow(), 5).equals("CP")) {
            try {
                NumeroEnLetras n = new NumeroEnLetras();

                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturaproforma.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);
                // Crear el objeto JasperPrint con los datos y el reporte
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("factura", Productos.getValueAt(Productos.getSelectedRow(), 0));
                parametros.put("MONTO", n.Convertir("" + Productos.getValueAt(Productos.getSelectedRow(), 8), true));
                parametros.put("cia", ControlSoftware.cia);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                // Crear el objeto JasperViewer y mostrar el reporte en pantalla
                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        } else {
            try {
                NumeroEnLetras n = new NumeroEnLetras();

                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturaoriginal.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);
                // Crear el objeto JasperPrint con los datos y el reporte
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("factura", Productos.getValueAt(Productos.getSelectedRow(), 0));
                parametros.put("MONTO", n.Convertir("" + Productos.getValueAt(Productos.getSelectedRow(), 8), true));
                parametros.put("cia", ControlSoftware.cia);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                // Crear el objeto JasperViewer y mostrar el reporte en pantalla
                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mantenimiento_facturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Productos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cactual;
    private javax.swing.JTextField cliente;
    private com.toedter.calendar.JDateChooser dfecha;
    private javax.swing.JTextField dnumero;
    private javax.swing.JTextField fv;
    private com.toedter.calendar.JDateChooser hfecha;
    private javax.swing.JTextField hnumero;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JRadioButton ninguno;
    private javax.swing.JRadioButton pcliente;
    private javax.swing.JRadioButton pfecha;
    private javax.swing.JRadioButton pnumero;
    private javax.swing.JTextField rf;
    private javax.swing.JTextField ri;
    private javax.swing.JRadioButton todos;
    // End of variables declaration//GEN-END:variables
}
