/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.controlsoftware;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.InputStream;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Usuario
 */
public class ventas_opciones extends javax.swing.JInternalFrame {

    /**
     * Creates new form formato
     */
    public String ustemp = "";
    BaseDeDatos bd = new BaseDeDatos();

    public ventas_opciones() {
        super("Usuario: " + new BaseDeDatos().valor("select user from usuario where cod_user=" + ControlSoftware.us) + ", Sucursal: " + new BaseDeDatos().valor("select company from company where id_company=" + ControlSoftware.cia));
        initComponents();
        bd.LlenarCombo1("select id_vendedor, vendedor from vendedor where cia=" + ControlSoftware.cia, vendedor, "id_vendedor", "vendedor");
        bd.LlenarCombo1("select id_gira, gira from gira where cia=" + ControlSoftware.cia, gira, "id_gira", "gira");
        bd.LlenarCombo1("select codcategoria, categoria from categoria where cia=" + ControlSoftware.cia, categoria, "codcategoria", "categoria");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        vendedor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        desdefecha = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        hastafecha = new com.toedter.calendar.JDateChooser();
        filtrarfecha = new javax.swing.JCheckBox();
        porvendedor = new javax.swing.JRadioButton();
        porgira = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        gira = new javax.swing.JComboBox<>();
        filtrargira = new javax.swing.JCheckBox();
        filtrarvendedor = new javax.swing.JCheckBox();
        original = new javax.swing.JRadioButton();
        proforma = new javax.swing.JRadioButton();
        contado = new javax.swing.JRadioButton();
        credito = new javax.swing.JRadioButton();
        originalyproforma = new javax.swing.JRadioButton();
        contadoycredito = new javax.swing.JRadioButton();
        porcategoria = new javax.swing.JRadioButton();
        facturadopordia = new javax.swing.JRadioButton();
        totalventas = new javax.swing.JRadioButton();
        ganancia = new javax.swing.JCheckBox();
        resumenventas = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        categoria = new javax.swing.JComboBox<>();
        filtrarcategoria = new javax.swing.JCheckBox();
        xfechapago = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TIPO DE FORMATO");

        jPanel1.setBackground(new java.awt.Color(195, 180, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back24.png"))); // NOI18N
        jButton4.setText("REGRESAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh24.png"))); // NOI18N
        jButton1.setText("GENERAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("VENDEDOR");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DESDE");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("HASTA");

        filtrarfecha.setBackground(new java.awt.Color(255, 255, 255));
        filtrarfecha.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        filtrarfecha.setForeground(new java.awt.Color(0, 0, 0));
        filtrarfecha.setSelected(true);
        filtrarfecha.setText("FILTRAR FECHA");

        porvendedor.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(porvendedor);
        porvendedor.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        porvendedor.setForeground(new java.awt.Color(0, 0, 0));
        porvendedor.setSelected(true);
        porvendedor.setText("POR VENDEDOR");
        porvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porvendedorActionPerformed(evt);
            }
        });

        porgira.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(porgira);
        porgira.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        porgira.setForeground(new java.awt.Color(0, 0, 0));
        porgira.setText("POR GIRA");
        porgira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porgiraActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("GIRA");

        filtrargira.setBackground(new java.awt.Color(255, 255, 255));
        filtrargira.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        filtrargira.setForeground(new java.awt.Color(0, 0, 0));
        filtrargira.setText("FILTRAR GIRA");

        filtrarvendedor.setBackground(new java.awt.Color(255, 255, 255));
        filtrarvendedor.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        filtrarvendedor.setForeground(new java.awt.Color(0, 0, 0));
        filtrarvendedor.setText("FILTRAR VENDEDOR");

        original.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(original);
        original.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        original.setForeground(new java.awt.Color(0, 0, 0));
        original.setSelected(true);
        original.setText("ORIGINALES");
        original.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalActionPerformed(evt);
            }
        });

        proforma.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(proforma);
        proforma.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        proforma.setForeground(new java.awt.Color(0, 0, 0));
        proforma.setText("PROFORMAS");
        proforma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proformaActionPerformed(evt);
            }
        });

        contado.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(contado);
        contado.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        contado.setForeground(new java.awt.Color(0, 0, 0));
        contado.setSelected(true);
        contado.setText("CONTADO");
        contado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contadoActionPerformed(evt);
            }
        });

        credito.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(credito);
        credito.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        credito.setForeground(new java.awt.Color(0, 0, 0));
        credito.setText("CREDITO");
        credito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditoActionPerformed(evt);
            }
        });

        originalyproforma.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(originalyproforma);
        originalyproforma.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        originalyproforma.setForeground(new java.awt.Color(0, 0, 0));
        originalyproforma.setText("ORIGINAL Y PROFORMA");
        originalyproforma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalyproformaActionPerformed(evt);
            }
        });

        contadoycredito.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(contadoycredito);
        contadoycredito.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        contadoycredito.setForeground(new java.awt.Color(0, 0, 0));
        contadoycredito.setText("CONTADO Y CREDITO");
        contadoycredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contadoycreditoActionPerformed(evt);
            }
        });

        porcategoria.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(porcategoria);
        porcategoria.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        porcategoria.setForeground(new java.awt.Color(0, 0, 0));
        porcategoria.setText("POR CATEGORIA");
        porcategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porcategoriaActionPerformed(evt);
            }
        });

        facturadopordia.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(facturadopordia);
        facturadopordia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        facturadopordia.setForeground(new java.awt.Color(0, 0, 0));
        facturadopordia.setSelected(true);
        facturadopordia.setText("FACTURADO POR DIA");
        facturadopordia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturadopordiaActionPerformed(evt);
            }
        });

        totalventas.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(totalventas);
        totalventas.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        totalventas.setForeground(new java.awt.Color(0, 0, 0));
        totalventas.setText("TOTAL VENTAS");
        totalventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalventasActionPerformed(evt);
            }
        });

        ganancia.setBackground(new java.awt.Color(255, 255, 255));
        ganancia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ganancia.setForeground(new java.awt.Color(0, 0, 0));
        ganancia.setText("MOSTRAR GANANCIA");

        resumenventas.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup5.add(resumenventas);
        resumenventas.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        resumenventas.setForeground(new java.awt.Color(0, 0, 0));
        resumenventas.setText("RESUMEN VENTAS");
        resumenventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumenventasActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CATEGORIA");

        filtrarcategoria.setBackground(new java.awt.Color(255, 255, 255));
        filtrarcategoria.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        filtrarcategoria.setForeground(new java.awt.Color(0, 0, 0));
        filtrarcategoria.setText("FILTRAR CATEGORIA");

        xfechapago.setBackground(new java.awt.Color(255, 255, 255));
        xfechapago.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        xfechapago.setForeground(new java.awt.Color(0, 0, 0));
        xfechapago.setSelected(true);
        xfechapago.setText("FILTRAR POR FECHA DE PAGO");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(original)
                    .addComponent(proforma)
                    .addComponent(originalyproforma)
                    .addComponent(filtrarfecha)
                    .addComponent(filtrarvendedor)
                    .addComponent(filtrargira))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contadoycredito)
                    .addComponent(credito)
                    .addComponent(contado)
                    .addComponent(filtrarcategoria)
                    .addComponent(ganancia))
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gira, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(desdefecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vendedor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hastafecha, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addGap(15, 15, 15))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facturadopordia)
                    .addComponent(porvendedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resumenventas)
                    .addComponent(porgira))
                .addGap(52, 52, 52)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalventas)
                    .addComponent(porcategoria))
                .addGap(86, 86, 86))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xfechapago)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturadopordia)
                    .addComponent(totalventas)
                    .addComponent(resumenventas))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porvendedor)
                    .addComponent(porgira)
                    .addComponent(porcategoria))
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(original)
                            .addComponent(contado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(proforma)
                            .addComponent(credito))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(originalyproforma)
                            .addComponent(contadoycredito))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filtrarvendedor)
                            .addComponent(desdefecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filtrarfecha)
                            .addComponent(hastafecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(8, 8, 8)
                        .addComponent(filtrargira))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(filtrarcategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ganancia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xfechapago)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("CONTROLSOFTWARE - COPYRIGHT 2023 - ING. JUNIOR MORALES");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ReportesVentas l = new ReportesVentas();
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int reporte = 0, agrupado = 0, metodo1 = -1, metodo2 = -1, tipo1 = -1, tipo2 = -1, gan = -1;
        String dgira = "", hgira = "", dvendedor = "", hvendedor = "", dcategoria = "", hcategoria = "", dfecha = "", hfecha = "";
        if (porvendedor.isSelected()) {
            agrupado = 1;
        }
        if (porgira.isSelected()) {
            agrupado = 2;
        }
        if (porcategoria.isSelected()) {
            agrupado = 3;
        }
        if (filtrarvendedor.isSelected()) {
            Item ven = (Item) vendedor.getSelectedItem();
            dvendedor = ven.getId();
            hvendedor = ven.getId();
        } else {
            dvendedor = bd.valor("select min(id_vendedor) from vendedor where cia=" + ControlSoftware.cia);
            hvendedor = bd.valor("select max(id_vendedor) from vendedor where cia=" + ControlSoftware.cia);
        }

        if (filtrargira.isSelected()) {
            Item ven = (Item) gira.getSelectedItem();
            dgira = ven.getId();
            hgira = ven.getId();
        } else {
            dgira = bd.valor("select min(id_gira) from gira where cia=" + ControlSoftware.cia);
            hgira = bd.valor("select max(id_gira) from gira where cia=" + ControlSoftware.cia);
        }

        if (ganancia.isSelected()) {
            gan = 1;
        } else {
            gan = 0;
        }
        if (facturadopordia.isSelected()) {
            reporte = 1;
        }
        if (resumenventas.isSelected()) {
            reporte = 2;
        }
        if (totalventas.isSelected()) {
            reporte = 3;
        }

        if (original.isSelected()) {
            tipo1 = 1;
            tipo2 = 1;
        }
        if (proforma.isSelected()) {
            tipo1 = 0;
            tipo2 = 0;
        }
        if (originalyproforma.isSelected()) {
            tipo1 = 0;
            tipo2 = 1;
        }
        if (contado.isSelected()) {
            metodo1 = 1;
            metodo2 = 1;
        }
        if (credito.isSelected()) {
            metodo1 = 0;
            metodo2 = 0;
        }
        if (contadoycredito.isSelected()) {
            metodo1 = 0;
            metodo2 = 1;
        }
        if (filtrargira.isSelected()) {
            Item gir = (Item) gira.getSelectedItem();
            dgira = gir.getId();
            hgira = gir.getId();
        } else {
            dgira = "0";
            hgira = "100000000";
        }
        if (filtrarvendedor.isSelected()) {
            Item ven = (Item) vendedor.getSelectedItem();
            dvendedor = ven.getId();
            hvendedor = ven.getId();
        } else {
            dvendedor = "0";
            hvendedor = "100000000";
        }
        if (filtrarcategoria.isSelected()) {
            Item cat = (Item) categoria.getSelectedItem();
            dcategoria = cat.getId();
            hcategoria = cat.getId();
        } else {
            dcategoria = "0";
            hcategoria = "10000000";
        }
        SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
        Date date1;
        date1 = desdefecha.getDate();
        Date date2;
        date2 = hastafecha.getDate();
        if (filtrarfecha.isSelected()) {
            if (!(date1 == null) && !(date2 == null)) {
                if (date2.compareTo(date1) == -1) {
                    JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                    return;
                } else {
                    dfecha = "" + Date_Format.format(desdefecha.getDate());
                    hfecha = "" + Date_Format.format(hastafecha.getDate());
                }
            } else {
                JOptionPane.showMessageDialog(null, "Las fechas son inválidas");
                return;
            }
        } else {
            Date fechaActual = new Date();
            String fechaFormateada = Date_Format.format(fechaActual);
            hastafecha.setDate(fechaActual);
            desdefecha.setDate(fechaActual);
            dfecha = "" + Date_Format.format(desdefecha.getDate());
            hfecha = "" + Date_Format.format(hastafecha.getDate());
        }

        System.out.println(reporte + ", " + agrupado + ", " + dfecha + ", " + hfecha + ", " + tipo1 + ", " + tipo2 + ", " + metodo1 + ", " + metodo2 + ", " + gan);

        if (reporte == 1 && agrupado == 1) {

            if(xfechapago.isSelected()){
                try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturado_por_dia_por_categoria_por_vendedor_xpago.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("dtipo", tipo1);
                parametros.put("htipo", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                parametros.put("ganancia", gan);

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
            }else{
                try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturado_por_dia_por_categoria_por_vendedor.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("dtipo", tipo1);
                parametros.put("htipo", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                parametros.put("ganancia", gan);

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
            }
        } else if (reporte == 1 && agrupado == 3) {
            if(xfechapago.isSelected()){
                try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturado_por_dia_por_categoria_xpago.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("dtipo", tipo1);
                parametros.put("htipo", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                parametros.put("ganancia", gan);

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
            }else{
                try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/facturado_por_dia_por_categoria.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("dtipo", tipo1);
                parametros.put("htipo", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                parametros.put("ganancia", gan);

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
            }
        } else if (reporte == 2 && agrupado == 1) {
            if(xfechapago.isSelected()){
                try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/ventas_por_fecha_resumen_xpago.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("tipo1", tipo1);
                parametros.put("tipo2", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
            }else{
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/ventas_por_fecha_resumen.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("dfecha", dfecha);
                parametros.put("hfecha", hfecha);
                parametros.put("tipo1", tipo1);
                parametros.put("tipo2", tipo2);
                parametros.put("metodo1", metodo1);
                parametros.put("metodo2", metodo2);
                parametros.put("cia", ControlSoftware.cia);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        } else if (reporte == 3 && agrupado == 1) {
            if (xfechapago.isSelected()) {
                try {
                    BaseDeDatos con = new BaseDeDatos();
                    Connection conn = con.getConexion();
                    // Cargar el reporte desde el archivo .jasper
                    String path = "/informedeventasporvendedor_xpago.jasper";
                    InputStream inputStream = getClass().getResourceAsStream(path);
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                    Map<String, Object> parametros = new HashMap<>();
                    parametros.put("dfecha", dfecha);
                    parametros.put("hfecha", hfecha);
                    parametros.put("idvendedordesde", dvendedor);
                    parametros.put("idvendedorhasta", hvendedor);
                    parametros.put("cia", ControlSoftware.cia);
                    parametros.put("tipof", tipo1);
                    parametros.put("tipof2", tipo2);
                    parametros.put("tipop", metodo1);
                    parametros.put("tipop2", metodo2);
                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);
                    JasperViewer viewer = new JasperViewer(jasperPrint, false);
                    viewer.setVisible(true);
                } catch (JRException ex) {
                    System.out.println("Error al generar el reporte: " + ex.getMessage());
                }
            }else{
                 try {
                    BaseDeDatos con = new BaseDeDatos();
                    Connection conn = con.getConexion();
                    // Cargar el reporte desde el archivo .jasper
                    String path = "/informedeventasporvendedor.jasper";
                    InputStream inputStream = getClass().getResourceAsStream(path);
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                    Map<String, Object> parametros = new HashMap<>();
                    parametros.put("dfecha", dfecha);
                    parametros.put("hfecha", hfecha);
                    parametros.put("idvendedordesde", dvendedor);
                    parametros.put("idvendedorhasta", hvendedor);
                    parametros.put("cia", ControlSoftware.cia);
                    parametros.put("tipof", tipo1);
                    parametros.put("tipof2", tipo2);
                    parametros.put("tipop", metodo1);
                    parametros.put("tipop2", metodo2);
                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);
                    JasperViewer viewer = new JasperViewer(jasperPrint, false);
                    viewer.setVisible(true);
                } catch (JRException ex) {
                    System.out.println("Error al generar el reporte: " + ex.getMessage());
                }
            }
        } else if (reporte == 3 && agrupado == 2) {
            if (xfechapago.isSelected()) {
                try {
                    BaseDeDatos con = new BaseDeDatos();
                    Connection conn = con.getConexion();
                    // Cargar el reporte desde el archivo .jasper
                    String path = "/informedeventasporgira_xpago.jasper";
                    InputStream inputStream = getClass().getResourceAsStream(path);
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                    Map<String, Object> parametros = new HashMap<>();
                    parametros.put("dfecha", dfecha);
                    parametros.put("hfecha", hfecha);
                    parametros.put("idvendedordesde", dvendedor);
                    parametros.put("idvendedorhasta", hvendedor);
                    parametros.put("cia", ControlSoftware.cia);
                    parametros.put("tipof", tipo1);
                    parametros.put("tipof2", tipo2);
                    parametros.put("tipop", metodo1);
                    parametros.put("tipop2", metodo2);

                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                    JasperViewer viewer = new JasperViewer(jasperPrint, false);
                    viewer.setVisible(true);

                } catch (JRException ex) {
                    System.out.println("Error al generar el reporte: " + ex.getMessage());
                }
            } else {
                try {
                    BaseDeDatos con = new BaseDeDatos();
                    Connection conn = con.getConexion();
                    // Cargar el reporte desde el archivo .jasper
                    String path = "/informedeventasporgira.jasper";
                    InputStream inputStream = getClass().getResourceAsStream(path);
                    JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                    Map<String, Object> parametros = new HashMap<>();
                    parametros.put("dfecha", dfecha);
                    parametros.put("hfecha", hfecha);
                    parametros.put("idvendedordesde", dvendedor);
                    parametros.put("idvendedorhasta", hvendedor);
                    parametros.put("cia", ControlSoftware.cia);
                    parametros.put("tipof", tipo1);
                    parametros.put("tipof2", tipo2);
                    parametros.put("tipop", metodo1);
                    parametros.put("tipop2", metodo2);

                    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                    JasperViewer viewer = new JasperViewer(jasperPrint, false);
                    viewer.setVisible(true);

                } catch (JRException ex) {
                    System.out.println("Error al generar el reporte: " + ex.getMessage());
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Este Reporte no existe");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void porvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porvendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porvendedorActionPerformed

    private void porgiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porgiraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porgiraActionPerformed

    private void originalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_originalActionPerformed

    private void proformaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proformaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proformaActionPerformed

    private void contadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contadoActionPerformed

    private void creditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditoActionPerformed

    private void originalyproformaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalyproformaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_originalyproformaActionPerformed

    private void contadoycreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contadoycreditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contadoycreditoActionPerformed

    private void porcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porcategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porcategoriaActionPerformed

    private void facturadopordiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturadopordiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_facturadopordiaActionPerformed

    private void totalventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalventasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalventasActionPerformed

    private void resumenventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumenventasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resumenventasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventas_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventas_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventas_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventas_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventas_opciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JComboBox<String> categoria;
    private javax.swing.JRadioButton contado;
    private javax.swing.JRadioButton contadoycredito;
    private javax.swing.JRadioButton credito;
    private com.toedter.calendar.JDateChooser desdefecha;
    private javax.swing.JRadioButton facturadopordia;
    private javax.swing.JCheckBox filtrarcategoria;
    private javax.swing.JCheckBox filtrarfecha;
    private javax.swing.JCheckBox filtrargira;
    private javax.swing.JCheckBox filtrarvendedor;
    private javax.swing.JCheckBox ganancia;
    private javax.swing.JComboBox<String> gira;
    private com.toedter.calendar.JDateChooser hastafecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton original;
    private javax.swing.JRadioButton originalyproforma;
    private javax.swing.JRadioButton porcategoria;
    private javax.swing.JRadioButton porgira;
    private javax.swing.JRadioButton porvendedor;
    private javax.swing.JRadioButton proforma;
    private javax.swing.JRadioButton resumenventas;
    private javax.swing.JRadioButton totalventas;
    private javax.swing.JComboBox<String> vendedor;
    private javax.swing.JCheckBox xfechapago;
    // End of variables declaration//GEN-END:variables
}
