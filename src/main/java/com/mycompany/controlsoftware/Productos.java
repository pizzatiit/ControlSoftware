/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.controlsoftware;

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;
import org.krysalis.barcode4j.impl.code128.Code128Bean;
import org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider;

/**
 *
 * @author Usuario
 */
public class Productos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Productos
     */
    int selected = 1;
    BaseDeDatos bd = new BaseDeDatos();

    public Productos() {
        super("Usuario: " + new BaseDeDatos().valor("select user from usuario where cod_user=" + ControlSoftware.us) + ", Sucursal: " + new BaseDeDatos().valor("select company from company where id_company=" + ControlSoftware.cia));

        initComponents();

        bd.LlenarTabla("select * from producto where cia=" + ControlSoftware.cia+" order by patito asc" , Productos);

        Productos.setAutoCreateRowSorter(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        descripcion = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        se = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Productos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CARTERA DE PRODUCTOS");

        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoKeyPressed(evt);
            }
        });

        descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descripcionKeyTyped(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("SOLO EXISTENCIAS");

        se.setEditable(false);

        jScrollPane1.setAutoscrolls(true);

        Productos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Productos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Productos.setSelectionBackground(new java.awt.Color(0, 0, 0));
        Productos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        Productos.getTableHeader().setReorderingAllowed(false);
        Productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProductosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(Productos);

        jPanel2.setBackground(new java.awt.Color(195, 180, 225));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back24.png"))); // NOI18N
        jButton6.setText("REGRESAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BARCODE24.png"))); // NOI18N
        jButton7.setText("ETIQUETA");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/see24.png"))); // NOI18N
        jButton5.setText("VER");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete24.png"))); // NOI18N
        jButton4.setText("ELIMINAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit24.png"))); // NOI18N
        jButton3.setText("MODIFICAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add24.png"))); // NOI18N
        jButton2.setText("NUEVO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh24.png"))); // NOI18N
        jButton1.setText("REFRESCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("CÓDIGO");

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("DESCRIPCIÓN");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(se, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(se, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("CONTROLSOFTWARE - COPYRIGHT 2023 - ING. JUNIOR MORALES");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(0, 478, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String perm = "42";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de ingresar productos.");
            return;
        }
        nuevoproducto l = new nuevoproducto(1);
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (jCheckBox1.isSelected()) {
            if (!codigo.getText().isEmpty() && descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where existencia>0 and codigo like '%" + codigo.getText() + "%'" + "and cia=" + ControlSoftware.cia+" order by patito asc" , Productos);
            } else if (codigo.getText().isEmpty() && !descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where existencia>0 and descripcion like '%" + descripcion.getText() + "%'" + "and cia=" + ControlSoftware.cia+" order by patito asc" , Productos);
            } else if (codigo.getText().isEmpty() && descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where existencia>0 and cia=" + ControlSoftware.cia+" order by ultimamodificacion asc", Productos);
            }
        } else {
            if (!codigo.getText().isEmpty() && descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where codigo like '%" + codigo.getText() + "%'" + "and cia=" + ControlSoftware.cia+" order by patito asc" , Productos);
            } else if (codigo.getText().isEmpty() && !descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where descripcion like '%" + descripcion.getText() + "%'" + "and cia=" + ControlSoftware.cia+" order by patito asc" , Productos);
            } else if (codigo.getText().isEmpty() && descripcion.getText().isEmpty()) {
                bd.LlenarTabla("select * from producto where cia=" + ControlSoftware.cia+" order by patito asc" , Productos);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String perm = "43";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de modificar productos.");
            return;
        }
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fila");
            return;
        }

        modificarproducto l = new modificarproducto(Integer.parseInt("" + Productos.getValueAt(Productos.getSelectedRow(), 0)), 1);
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductosMouseClicked
        // TODO add your handling code here:
        int pick = Productos.getSelectedRow();
        se.setText("" + Productos.getSelectedRow());
        selected = Integer.parseInt(Productos.getValueAt(Integer.parseInt(se.getText().toString()), 0).toString());
    }//GEN-LAST:event_ProductosMouseClicked

    private void ProductosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductosMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductosMousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String perm = "45";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de ver productos.");
            return;
        }
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        ficha_producto l = new ficha_producto(Integer.parseInt("" + Productos.getValueAt(Productos.getSelectedRow(), 0)));
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Inventarios l = new Inventarios();
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
//        String filePath = "ORDEN1.xlsx"; // Reemplaza con la ruta a tu archivo Excel
//
//        try (FileInputStream fileInputStream = new FileInputStream(filePath); Workbook workbook = new XSSFWorkbook(fileInputStream)) {
//
//            org.apache.poi.ss.usermodel.Sheet sheet = workbook.getSheetAt(0); // Obtén la primera hoja del libro (índice 0)
//
//            List<Object[]> tableData = new ArrayList<>();
//
//            // Iterar sobre las filas de la hoja
//            Iterator<org.apache.poi.ss.usermodel.Row> rowIterator = sheet.iterator();
//            while (rowIterator.hasNext()) {
//
//                org.apache.poi.ss.usermodel.Row row = rowIterator.next();
//
//                // Obtener los valores específicos de las celdas deseadas
//                 String numero;
//                Cell numeroCell = row.getCell(2);
//                if (numeroCell.getCellType() == CellType.NUMERIC) {
//                    double numeroValue = numeroCell.getNumericCellValue();
//                    DecimalFormat decimalFormat = new DecimalFormat("#");
//                    numero = decimalFormat.format(numeroValue);
//                } else {
//                    numero = numeroCell.getStringCellValue();
//                }
//                String estilo = "" + row.getCell(11);
//                String cantidad = "" + row.getCell(12);
//                String cia = "" + row.getCell(0);
//
//                // Agregar los valores a la lista de datos de la fila
//                Object[] rowData = {numero, estilo, cantidad, cia};
//                if (!numero.equals("Numero")) {
//                    tableData.add(rowData);
//                }
//            }
//
//            // Crear el modelo de tabla personalizado
//            DefaultTableModel tableModel = new DefaultTableModel();
//            tableModel.setColumnIdentifiers(new Object[]{"Numero", "Estilo", "Cantidad", "Cia"});
//
//            // Agregar los datos al modelo de tabla
//            for (Object[] rowData : tableData) {
//                if(bd.versiesta("select * from detalle_productos_pedido where numero='"+rowData[0]+"' and codigo='"+rowData[1]+"'"))
//                    System.out.println("ya ingresado");
//                else{
//                    bd.EjecutarConsultas("INSERT INTO `detalle_productos_pedido`(`Numero`, `codigo`, `cantidad`, `cia`, `estado`) VALUES ('"+rowData[0]+"','"+rowData[1]+"','"+rowData[2]+"','"+rowData[3]+"','1')");
//                }
//                
//                tableModel.addRow(rowData);
//            }
//
//            // Crear la tabla y asignar el modelo
//            Productos.setModel(tableModel);
//
//            // Aquí puedes agregar la tabla a tu interfaz de usuario o realizar otras operaciones con ella
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String perm = "44";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de eliminar productos.");
            return;
        }
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ningún producto");
            return;
        }
        boolean x1 = bd.versiesta("select idproducto from detalleorden where idproducto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
        boolean x2 = bd.versiesta("select id_producto from detalle_devolucion where id_producto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
        boolean x3 = bd.versiesta("select idproducto from detalle_factura where idproducto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
        boolean x4 = bd.versiesta("select idproducto from detalle_orden_de_pedido where idproducto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
        boolean x5 = bd.versiesta("select id_producto from detalle_pedido_chequeo_bodega where id_producto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
        if (x1 || x2 || x3 || x4 || x5) {
            JOptionPane.showMessageDialog(null, "no se puede eliminar este producto puesto que tiene registros en otras tablas.");
            return;
        }
        int f = JOptionPane.showConfirmDialog(null, "Está seguro de eliminar este producto?");
        if (f == 0) {
            bd.EjecutarConsultas("delete from producto where idproducto=" + Productos.getValueAt(Productos.getSelectedRow(), 0) + " and cia=" + ControlSoftware.cia);
            JOptionPane.showMessageDialog(null, "Producto eliminado exitosamente");
            jButton1.doClick();
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String perm = "46";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de imprimir etiquetas de productos.");
            return;
        }
        try {
//            int x = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el numero de etiquetas que desea de este código"));
            String p = "" + Productos.getValueAt(Productos.getSelectedRow(), 0);
//            
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/ticket.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("cia", ControlSoftware.cia);
                parametros.put("cliente",p);
                 
                

                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
//            String codletras = bd.valor("select codigo from producto where idproducto=" + p + " and cia=" + ControlSoftware.cia);
//            String descripcion = bd.valor("select descripcion from producto where idproducto=" + p + " and cia=" + ControlSoftware.cia);
//            String nombreSucursal = bd.valor("select abreviatura from company where id_company=" + ControlSoftware.cia);
//            LocalDate fechaActual = LocalDate.now();
//            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yy");
//            String fecha = fechaActual.format(formato);
//            String Preciocompra = bd.valor("select preciocompra from producto where idproducto=" + p + " and cia=" + ControlSoftware.cia);
//            String[] costoenletras1 = Preciocompra.split("", 0);
//            String costoenletras = "";
//
//            for (int i = 0; i < costoenletras1.length; i++) {
//                if (costoenletras1[i].equals("1")) {
//                    costoenletras += "F";
//                }
//                if (costoenletras1[i].equals("2")) {
//                    costoenletras += "R";
//                }
//                if (costoenletras1[i].equals("3")) {
//                    costoenletras += "A";
//                }
//                if (costoenletras1[i].equals("4")) {
//                    costoenletras += "N";
//                }
//                if (costoenletras1[i].equals("5")) {
//                    costoenletras += "K";
//                }
//                if (costoenletras1[i].equals("6")) {
//                    costoenletras += "L";
//                }
//                if (costoenletras1[i].equals("7")) {
//                    costoenletras += "I";
//                }
//                if (costoenletras1[i].equals("8")) {
//                    costoenletras += "H";
//                }
//                if (costoenletras1[i].equals("9")) {
//                    costoenletras += "E";
//                }
//                if (costoenletras1[i].equals("0")) {
//                    costoenletras += "C";
//                }
//                if (costoenletras1[i].equals(".")) {
//                    costoenletras += ".";
//                }
//            }
//
//            try {
//                PDDocument document = new PDDocument();
//                for (int i = 0; i < x; i++) {
//                    PDPage page = new PDPage(new PDRectangle(2 * 72, 1 * 72)); // Tamaño de la etiqueta en puntos (1 pulgada = 72 puntos)
//                    document.addPage(page);
//
//                    PDPageContentStream contentStream = new PDPageContentStream(document, page);
//                    contentStream.setFont(PDType1Font.HELVETICA_BOLD, 10); // Tamaño de la fuente
//
//                    // Coordenadas de inicio de la etiqueta
//                    float startX = (page.getMediaBox().getWidth() - 2 * 72) / 2; // Margen izquierdo
//                    float startY = 60; // Margen inferior
//
//                    // Escribir el dato variable centrado
//                    float datoVariableWidth = PDType1Font.HELVETICA_BOLD.getStringWidth("" + costoenletras + "  " + nombreSucursal + "  " + fecha) / 1000 * 10; // Ancho del texto en puntos
//                    float datoVariableStartX = startX + (2 * 72 - datoVariableWidth) / 2; // Alinear al centro horizontal
//                    contentStream.beginText();
//                    contentStream.newLineAtOffset(datoVariableStartX, startY - 4);
//                    contentStream.showText("" + costoenletras + "  " + nombreSucursal + "  " + fecha);
//                    contentStream.endText();
//
//                    // Generar código de barras
//                    Code128Bean barcodeBean = new Code128Bean();
//                    barcodeBean.setBarHeight(3f); // Aumenta la altura del código de barras
//                    barcodeBean.setModuleWidth(0.25); // Aumenta el ancho del módulo del código de barras
//                    barcodeBean.setQuietZone(2);
//                    barcodeBean.setFontName("Arial Black"); // Cambiar el tipo de fuente
//
//                    BitmapCanvasProvider canvasProvider = new BitmapCanvasProvider(1700, BufferedImage.TYPE_BYTE_BINARY, false, 0);
//                    barcodeBean.generateBarcode(canvasProvider, codletras);
//                    canvasProvider.finish();
//
//                    // Guardar la imagen del código de barras en un archivo temporal
//                    File tempFile = File.createTempFile("barcode", ".png");
//                    ImageIO.write(canvasProvider.getBufferedImage(), "png", tempFile);
//
//                    // Convertir la imagen del código de barras a PDImageXObject de PDFBox
//                    PDImageXObject pdBarcodeImage = PDImageXObject.createFromFileByExtension(tempFile, document);
//
//                    // Dibujar el código de barras centrado
//                    float barcodeStartX = startX + (2 * 72 - 1.8f * 72) / 2; // Centro horizontal de la página
//                    float barcodeStartY = startY - 45; // Ajustar la posición del código de barras
//                    contentStream.drawImage(pdBarcodeImage, barcodeStartX, barcodeStartY, 1.8f * 72, 0.5f * 72);
//
//                    // Escribir el código de barras variable centrado
//                    float descriptionWidth = PDType1Font.HELVETICA_BOLD.getStringWidth(descripcion) / 1000 * 10; // Ancho del texto en puntos
//
//                    float fontSize = 10;
//                    while (descriptionWidth > 2 * 72 - 6 && fontSize > 1) {
//                        fontSize -= 1;
//                        contentStream.setFont(PDType1Font.HELVETICA_BOLD, fontSize);
//                        descriptionWidth = PDType1Font.HELVETICA_BOLD.getStringWidth(descripcion) / 1000 * fontSize;
//                    }
//                    float descriptionStartX = startX + (2 * 72 - descriptionWidth) / 2; // Alinear al centro horizontal
//                    float descriptionStartY = barcodeStartY - 10; // Ajustar la posición de la descripción del producto
//
//                    contentStream.beginText();
//                    contentStream.newLineAtOffset(descriptionStartX, descriptionStartY);
//                    contentStream.showText(descripcion);
//                    contentStream.endText();
//
//                    contentStream.close();
//                }
//                document.save("etiquetas.pdf");
//                document.close();
//
//                System.out.println("Las etiquetas se han generado correctamente.");
//            } catch (IOException e) {
//                System.out.println("Error al generar las etiquetas: " + e.getMessage());
//            }
//            File archivoPDF = new File("etiquetas.pdf");
//            if (archivoPDF.exists() && archivoPDF.isFile()) {
//                Desktop desktop = Desktop.getDesktop();
//                desktop.open(archivoPDF);
//            } else {
//                System.out.println("El archivo PDF no existe o no es válido.");
//            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionKeyTyped

    private void descripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jButton1.doClick();
        }
    }//GEN-LAST:event_descripcionKeyPressed

    private void codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jButton1.doClick();
        }
    }//GEN-LAST:event_codigoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Productos;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField descripcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField se;
    // End of variables declaration//GEN-END:variables
}
