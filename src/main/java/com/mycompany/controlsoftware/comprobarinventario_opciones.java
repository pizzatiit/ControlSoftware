/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.controlsoftware;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.InputStream;
import java.sql.Connection;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
 
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Usuario
 */
public class comprobarinventario_opciones extends javax.swing.JInternalFrame {

    /**
     * Creates new form formato
     */
    public String ustemp = "";
    BaseDeDatos bd = new BaseDeDatos();

    public comprobarinventario_opciones() {
        super("Usuario: " + new BaseDeDatos().valor("select user from usuario where cod_user=" + ControlSoftware.us) + ", Sucursal: " + new BaseDeDatos().valor("select company from company where id_company=" + ControlSoftware.cia));
        initComponents();
        bd.LlenarCombo1("select codubicacion, ubicacion from ubicacion where cia=" + ControlSoftware.cia, ubicacion, "codubicacion", "ubicacion");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        con = new javax.swing.JRadioButton();
        sin = new javax.swing.JRadioButton();
        porgrupo = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        codcat = new javax.swing.JTextField();
        descat = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        codsub = new javax.swing.JTextField();
        dessub = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        codcat1 = new javax.swing.JTextField();
        descat1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        codsub1 = new javax.swing.JTextField();
        dessub1 = new javax.swing.JTextField();
        porgrupoysubgrupo = new javax.swing.JCheckBox();
        porubicacion = new javax.swing.JCheckBox();
        ubicacion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TIPO DE FORMATO");

        jPanel1.setBackground(new java.awt.Color(195, 180, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back24.png"))); // NOI18N
        jButton4.setText("REGRESAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh24.png"))); // NOI18N
        jButton1.setText("GENERAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        con.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(con);
        con.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        con.setForeground(new java.awt.Color(0, 0, 0));
        con.setSelected(true);
        con.setText("CON Y SIN EXISTENCIAS");

        sin.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(sin);
        sin.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        sin.setForeground(new java.awt.Color(0, 0, 0));
        sin.setText("SOLO EXISTENCIAS");

        porgrupo.setBackground(new java.awt.Color(255, 255, 255));
        porgrupo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        porgrupo.setForeground(new java.awt.Color(0, 0, 0));
        porgrupo.setText("FILTRAR POR GRUPO");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("DESDE CATEGORIA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        codcat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codcatFocusLost(evt);
            }
        });
        codcat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codcatMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                codcatMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                codcatMouseReleased(evt);
            }
        });
        codcat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codcatKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codcatKeyTyped(evt);
            }
        });

        descat.setEditable(false);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("DESDE SUBCATEGORIA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        codsub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codsubFocusLost(evt);
            }
        });
        codsub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codsubMouseClicked(evt);
            }
        });
        codsub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codsubKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codsubKeyTyped(evt);
            }
        });

        dessub.setEditable(false);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("HASTA CATEGORIA");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        codcat1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codcat1FocusLost(evt);
            }
        });
        codcat1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codcat1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                codcat1MouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                codcat1MouseReleased(evt);
            }
        });
        codcat1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codcat1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codcat1KeyTyped(evt);
            }
        });

        descat1.setEditable(false);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("HASTA SUBCATEGORIA");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        codsub1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                codsub1FocusLost(evt);
            }
        });
        codsub1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codsub1MouseClicked(evt);
            }
        });
        codsub1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codsub1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codsub1KeyTyped(evt);
            }
        });

        dessub1.setEditable(false);

        porgrupoysubgrupo.setBackground(new java.awt.Color(255, 255, 255));
        porgrupoysubgrupo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        porgrupoysubgrupo.setForeground(new java.awt.Color(0, 0, 0));
        porgrupoysubgrupo.setText("FILTRAR POR GRUPO Y SUBGRUPO");

        porubicacion.setBackground(new java.awt.Color(255, 255, 255));
        porubicacion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        porubicacion.setForeground(new java.awt.Color(0, 0, 0));
        porubicacion.setText("FILTRAR POR UBICACIÓN");
        porubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porubicacionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("UBICACIÓN");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(codsub, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(sin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(porgrupo)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(codcat, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dessub, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                    .addComponent(descat)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(con)
                                .addGap(0, 475, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(porgrupoysubgrupo)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(codcat1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(descat1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(porubicacion)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jButton6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(codsub1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dessub1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(con)
                    .addComponent(porgrupo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sin)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(descat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(codcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(descat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codcat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(porgrupoysubgrupo)
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dessub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codsub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dessub1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codsub1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(porubicacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("CONTROLSOFTWARE - COPYRIGHT 2023 - ING. JUNIOR MORALES");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 288, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ReportesInventario l = new ReportesInventario();
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (con.isSelected() && !porgrupo.isSelected() && !porgrupoysubgrupo.isSelected()&& !porubicacion.isSelected()) {
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        if (con.isSelected() && !porgrupo.isSelected() && !porgrupoysubgrupo.isSelected()&& porubicacion.isSelected()) {
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porubicacion.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        if (sin.isSelected() && !porgrupo.isSelected() && !porgrupoysubgrupo.isSelected()&& porubicacion.isSelected()) {
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porubicacion_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        
        if (sin.isSelected() && !porgrupo.isSelected() && !porgrupoysubgrupo.isSelected() && !porubicacion.isSelected()) {
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }

        if (con.isSelected() && porgrupo.isSelected() && !porgrupoysubgrupo.isSelected() && !porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
            }
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupo.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        
        if (con.isSelected() && porgrupo.isSelected() && !porgrupoysubgrupo.isSelected() && porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
            }
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupo_porubicacion.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId()); 
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        
         if (sin.isSelected() && porgrupo.isSelected() && !porgrupoysubgrupo.isSelected() && porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
            }
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupo_porubicacion_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId()); 
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        
        
        if (sin.isSelected() && porgrupo.isSelected() && !porgrupoysubgrupo.isSelected() && !porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
            }
            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupo_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }

        if (con.isSelected() && porgrupo.isSelected() && porgrupoysubgrupo.isSelected()&& !porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta grupo no válido");
            }

            if (codsub.getText().isEmpty() || codsub.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde subgrupo no válido");
                return;
            }
            if (codsub1.getText().isEmpty() || codsub1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta subgrupo no válido");
            }

            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupoysubgrupo.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                parametros.put("desdesubgrupo", codsub.getText());
                parametros.put("hastasubgrupo", codsub1.getText());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
         if (con.isSelected() && porgrupo.isSelected() && porgrupoysubgrupo.isSelected()&& porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta grupo no válido");
            }

            if (codsub.getText().isEmpty() || codsub.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde subgrupo no válido");
                return;
            }
            if (codsub1.getText().isEmpty() || codsub1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta subgrupo no válido");
            }

            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupoysubgrupo_porubicacion.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                parametros.put("desdesubgrupo", codsub.getText());
                parametros.put("hastasubgrupo", codsub1.getText());
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId()); 
                
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
          if (sin.isSelected() && porgrupo.isSelected() && porgrupoysubgrupo.isSelected()&& porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta grupo no válido");
            }

            if (codsub.getText().isEmpty() || codsub.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde subgrupo no válido");
                return;
            }
            if (codsub1.getText().isEmpty() || codsub1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta subgrupo no válido");
            }

            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupoysubgrupo_porubicacion_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                parametros.put("desdesubgrupo", codsub.getText());
                parametros.put("hastasubgrupo", codsub1.getText());
                Item ubi=(Item)ubicacion.getSelectedItem();
                parametros.put("ubicacion", ubi.getId()); 
                
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
        if (sin.isSelected() && porgrupo.isSelected() && porgrupoysubgrupo.isSelected()&& !porubicacion.isSelected()) {
            if (codcat.getText().isEmpty() || codcat.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde grupo no válido");
                return;
            }
            if (codcat1.getText().isEmpty() || codcat1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta grupo no válido");
            }

            if (codsub.getText().isEmpty() || codsub.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato desde subgrupo no válido");
                return;
            }
            if (codsub1.getText().isEmpty() || codsub1.getText().equals("0")) {
                JOptionPane.showMessageDialog(null, "Dato hasta subgrupo no válido");
            }

            try {
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/comprobarinventario_porgrupoysubgrupo_soloexistencias.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);

                Map<String, Object> parametros = new HashMap<>();
                parametros.put("com", ControlSoftware.cia);
                parametros.put("user", bd.valor("select user from usuario where cod_user=" + ControlSoftware.us));
                parametros.put("desdegrupo", codcat.getText());
                parametros.put("hastagrupo", codcat1.getText());
                parametros.put("desdesubgrupo", codsub.getText());
                parametros.put("hastasubgrupo", codsub1.getText());
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);

                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void porubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porubicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porubicacionActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        seleccionar_subcategoria2 l = new seleccionar_subcategoria2("4", codcat1.getText());
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
            (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void codsub1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codsub1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_codsub1KeyTyped

    private void codsub1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codsub1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_codsub1KeyPressed

    private void codsub1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codsub1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_codsub1MouseClicked

    private void codsub1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codsub1FocusLost
        // TODO add your handling code here:
        if (codcat1.getText().isEmpty()) {
            codcat1.setText("0");
        }
        if (codsub1.getText().isEmpty()) {
            codsub1.setText("0");
        }

        descat1.setText("" + bd.valor("select categoria from categoria where codcategoria=" + codcat1.getText() + " and cia=" + ControlSoftware.cia));
        dessub1.setText("" + bd.valor("select subcategoria from subcategoria where codsubcategoria=" + codsub1.getText() + " and idcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
    }//GEN-LAST:event_codsub1FocusLost

    private void codsubKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codsubKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        if (!(key == '0' || key == '1' || key == '2' || key == '3' || key == '4' || key == '5' || key == '6' || key == '7' || key == '8' || key == '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_codsubKeyTyped

    private void codsubKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codsubKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyCode() == evt.VK_V)) {
            // Evitar la acción de pegar
            evt.consume();
        }
    }//GEN-LAST:event_codsubKeyPressed

    private void codsubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codsubMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_codsubMouseClicked

    private void codsubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codsubFocusLost
        // TODO add your handling code here:
        if (codcat.getText().isEmpty()) {
            codcat.setText("0");
        }
        if (codsub.getText().isEmpty()) {
            codsub.setText("0");
        }

        descat.setText("" + bd.valor("select categoria from categoria where codcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
        dessub.setText("" + bd.valor("select subcategoria from subcategoria where codsubcategoria=" + codsub.getText() + " and idcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
    }//GEN-LAST:event_codsubFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        seleccionar_subcategoria2 l = new seleccionar_subcategoria2("3", codcat.getText());
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
            (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void codcatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codcatKeyTyped
        // TODO add your handling code here:

        int key = evt.getKeyChar();
        if (!(key == '0' || key == '1' || key == '2' || key == '3' || key == '4' || key == '5' || key == '6' || key == '7' || key == '8' || key == '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_codcatKeyTyped

    private void codcatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codcatKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyCode() == evt.VK_V)) {
            // Evitar la acción de pegar
            evt.consume();
        }
    }//GEN-LAST:event_codcatKeyPressed

    private void codcatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcatMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_codcatMouseReleased

    private void codcatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcatMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_codcatMouseExited

    private void codcatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcatMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_codcatMouseClicked

    private void codcatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codcatFocusLost
        // TODO add your handling code here:
        if (codcat.getText().isEmpty()) {
            codcat.setText("0");
        }
        if (codsub.getText().isEmpty()) {
            codsub.setText("0");
        }

        descat.setText("" + bd.valor("select categoria from categoria where codcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
        dessub.setText("" + bd.valor("select subcategoria from subcategoria where codsubcategoria=" + codsub.getText() + " and idcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
    }//GEN-LAST:event_codcatFocusLost

    private void codcat1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codcat1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_codcat1KeyTyped

    private void codcat1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codcat1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_codcat1KeyPressed

    private void codcat1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcat1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_codcat1MouseReleased

    private void codcat1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcat1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_codcat1MouseExited

    private void codcat1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codcat1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_codcat1MouseClicked

    private void codcat1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codcat1FocusLost
        // TODO add your handling code here:
        if (codcat1.getText().isEmpty()) {
            codcat1.setText("0");
        }
        if (codsub1.getText().isEmpty()) {
            codsub1.setText("0");
        }

        descat1.setText("" + bd.valor("select categoria from categoria where codcategoria=" + codcat1.getText() + " and cia=" + ControlSoftware.cia));
        dessub1.setText("" + bd.valor("select subcategoria from subcategoria where codsubcategoria=" + codsub1.getText() + " and idcategoria=" + codcat.getText() + " and cia=" + ControlSoftware.cia));
    }//GEN-LAST:event_codcat1FocusLost

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        seleccionar_categoria4 l = new seleccionar_categoria4("4");
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
            (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        seleccionar_categoria4 l = new seleccionar_categoria4("3");
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
            (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(comprobarinventario_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(comprobarinventario_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(comprobarinventario_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(comprobarinventario_opciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new comprobarinventario_opciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    public static javax.swing.JTextField codcat;
    public static javax.swing.JTextField codcat1;
    public static javax.swing.JTextField codsub;
    public static javax.swing.JTextField codsub1;
    private javax.swing.JRadioButton con;
    public static javax.swing.JTextField descat;
    public static javax.swing.JTextField descat1;
    public static javax.swing.JTextField dessub;
    public static javax.swing.JTextField dessub1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox porgrupo;
    private javax.swing.JCheckBox porgrupoysubgrupo;
    private javax.swing.JCheckBox porubicacion;
    private javax.swing.JRadioButton sin;
    private javax.swing.JComboBox<String> ubicacion;
    // End of variables declaration//GEN-END:variables
}
