package com.mycompany.controlsoftware;

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.krysalis.barcode4j.impl.code128.Code128Bean;
import org.krysalis.barcode4j.output.bitmap.BitmapCanvasProvider;

/**
 *
 * @author ING. JUNIOR MORALES
 */
public class mantenimiento_chequeo_bodega_final extends javax.swing.JInternalFrame {

    /**
     * Creates new form seleccionarfactura
     */
    BaseDeDatos bd = new BaseDeDatos();

    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos xlsx", "xlsx");

    public mantenimiento_chequeo_bodega_final() {
        super("Usuario: " + new BaseDeDatos().valor("select user from usuario where cod_user=" + ControlSoftware.us) + ", Sucursal: " + new BaseDeDatos().valor("select company from company where id_company=" + ControlSoftware.cia));

        UIManager.put("TableHeaderUI", "javax.swing.plaf.basic.BasicTableHeaderUI");
        initComponents();

        bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido p inner join clientes c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.estado=1 order by p.fechaingreso desc ", Productos);
        //Productos.setDefaultRenderer(Object.class, new MiRendererCP());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pfecha = new javax.swing.JRadioButton();
        ninguno = new javax.swing.JRadioButton();
        todos = new javax.swing.JRadioButton();
        pnumero = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dnumero = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hnumero = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dfecha = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        hfecha = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        cliente = new javax.swing.JTextField();
        pcliente = new javax.swing.JRadioButton();
        pendientes = new javax.swing.JRadioButton();
        chequeado = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Productos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(195, 180, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "FILTROS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        buttonGroup1.add(pfecha);
        pfecha.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pfecha.setForeground(new java.awt.Color(0, 0, 0));
        pfecha.setText("POR FECHA");

        buttonGroup1.add(ninguno);
        ninguno.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ninguno.setForeground(new java.awt.Color(0, 0, 0));
        ninguno.setSelected(true);
        ninguno.setText("NINGUNO");

        buttonGroup1.add(todos);
        todos.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        todos.setForeground(new java.awt.Color(0, 0, 0));
        todos.setText("TODOS");

        buttonGroup1.add(pnumero);
        pnumero.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pnumero.setForeground(new java.awt.Color(0, 0, 0));
        pnumero.setText("POR NUMERO");

        jPanel2.setBackground(new java.awt.Color(195, 180, 225));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR NUMERO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("DESDE");

        dnumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dnumeroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dnumeroKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("HASTA");

        hnumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hnumeroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hnumeroKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(dnumero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hnumero, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(hnumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(195, 180, 225));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR FECHA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("DESDE");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("HASTA");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(dfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hfecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(dfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(195, 180, 225));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "POR CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cliente)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        buttonGroup1.add(pcliente);
        pcliente.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pcliente.setForeground(new java.awt.Color(0, 0, 0));
        pcliente.setText("POR CLIENTE");

        buttonGroup2.add(pendientes);
        pendientes.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pendientes.setForeground(new java.awt.Color(0, 0, 0));
        pendientes.setSelected(true);
        pendientes.setText("PENDIENTES");

        buttonGroup2.add(chequeado);
        chequeado.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        chequeado.setForeground(new java.awt.Color(0, 0, 0));
        chequeado.setText("CHEQUEADO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pcliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnumero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ninguno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(todos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pendientes)
                            .addComponent(chequeado, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ninguno)
                            .addComponent(todos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pfecha)
                            .addComponent(pendientes))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pnumero)
                            .addComponent(chequeado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pcliente)))
                .addGap(7, 7, 7)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(195, 180, 225));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back24.png"))); // NOI18N
        jButton9.setText("REGRESAR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton9);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print24.png"))); // NOI18N
        jButton6.setText("IMPRIMIR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/DOIT.png"))); // NOI18N
        jButton8.setText("PROCESAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reverse24.png"))); // NOI18N
        jButton7.setText("REVERSAR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reanudar24.png"))); // NOI18N
        jButton3.setText("CHEQUEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh24.png"))); // NOI18N
        jButton1.setText("REFRESCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);

        jScrollPane1.setAutoscrolls(true);

        Productos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Productos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Productos.setSelectionBackground(new java.awt.Color(0, 0, 0));
        Productos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        Productos.getTableHeader().setReorderingAllowed(false);
        Productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductosMouseClicked(evt);
            }
        });
        Productos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Productos);

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("MANTENIMIENTO DE CHEQUEO EN BODEGA");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 19, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("CONTROLSOFTWARE - COPYRIGHT 2023 - ING. JUNIOR MORALES");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addGap(0, 447, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
            Date date1;
            date1 = dfecha.getDate();
            Date date2;
            date2 = hfecha.getDate();
            if (pendientes.isSelected()) {
                if (ninguno.isSelected()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.estado=1 order by p.fechaingreso desc ", Productos);
                } else if (pnumero.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.numero_orden between " + dnumero.getText() + " and " + hnumero.getText() + " and p.estado=1 order by p.fechaingreso desc ", Productos);
                } else if (pfecha.isSelected() && !(date1 == null) && !(date2 == null)) {
                    if (date2.compareTo(date1) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                    } else {
                        bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and cp.fechaorden between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'" + " and p.estado=1 order by p.fechaingreso desc ", Productos);
                    }
                } else if (pcliente.isSelected() && !cliente.getText().isEmpty()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'" + " and p.estado=1 order by p.fechaingreso desc ", Productos);
                } else if (todos.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty() && !cliente.getText().isEmpty() && !dfecha.getDate().equals("") && !hfecha.getDate().equals("")) {
                    if (date2.compareTo(date1) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                    } else {
                        bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'" + " and p.fechaorden between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'" + " and p.numero_orden between " + dnumero.getText() + " and " + hnumero.getText() + " and p.estado=1 order by p.fechaingreso desc ", Productos);
                    }

                } else {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.estado=1 order by p.fechaingreso desc ", Productos);

                }
            } else {
                if (ninguno.isSelected()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.estado>1 order by p.fechaingreso desc ", Productos);
                } else if (pnumero.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.numero_orden between " + dnumero.getText() + " and " + hnumero.getText() + " and p.estado>1 order by p.fechaingreso desc ", Productos);
                } else if (pfecha.isSelected() && !(date1 == null) && !(date2 == null)) {
                    if (date2.compareTo(date1) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                    } else {
                        bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and cp.fechaorden between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'" + " and p.estado>1 order by p.fechaingreso desc ", Productos);
                    }
                } else if (pcliente.isSelected() && !cliente.getText().isEmpty()) {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'" + " and p.estado>1 order by p.fechaingreso desc ", Productos);
                } else if (todos.isSelected() && !dnumero.getText().isEmpty() && !hnumero.getText().isEmpty() && !cliente.getText().isEmpty() && !dfecha.getDate().equals("") && !hfecha.getDate().equals("")) {
                    if (date2.compareTo(date1) == -1) {
                        JOptionPane.showMessageDialog(null, "La fecha final no puede ser mayor a la inicial.");
                    } else {
                        bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and c.nombre like '%" + cliente.getText() + "%'" + " and p.fechaorden between '" + Date_Format.format(dfecha.getDate()) + "' and '" + Date_Format.format(hfecha.getDate()) + "'" + " and p.numero_orden between " + dnumero.getText() + " and " + hnumero.getText() + " and p.estado>1 order by p.fechaingreso desc ", Productos);
                    }

                } else {
                    bd.LlenarTabla("select p.idorden as ID, p.numero_orden as N_ORDEN, c.nombre as CLIENTE, p.fechaorden as FECHA_PEDIDO, u.user as USUARIO, CASE p.estado WHEN '1' THEN 'INGRESADA' WHEN '2' THEN 'FINALIZADA' WHEN '0' THEN 'ANULADA' WHEN '3' THEN 'CHEQUEADA-BODEGA' END AS ESTADO from orden_de_pedido as p inner join clientes as c on c.idcliente=p.idcliente inner join usuario u on p.idusuario=u.cod_user where p.cia=" + ControlSoftware.cia + " and p.estado>1 order by p.fechaingreso desc ", Productos);

                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProductosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductosKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductosKeyReleased

    private void ProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductosMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductosMouseClicked

    private void dnumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnumeroKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        if (!(key == '0' || key == '1' || key == '2' || key == '3' || key == '4' || key == '5' || key == '6' || key == '7' || key == '8' || key == '9' || key == '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_dnumeroKeyTyped

    private void dnumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnumeroKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_dnumeroKeyReleased

    private void hnumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hnumeroKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_hnumeroKeyReleased

    private void hnumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hnumeroKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_hnumeroKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        String perm = "141";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de imprimir comprobantes de salida.");
            return;
        }
        int x = 0;
        x = Productos.getSelectedRow();
        if (x == -1) {
            return;
        }
         String cod = "" + Productos.getValueAt(Productos.getSelectedRow(), 0);
           
        String idchequeo = bd.valor("select id from chequeo_bodega where idorden=" + cod + " and cia=" + ControlSoftware.cia);

        String ar[] = bd.Llenar("select distinct(idusuario) from chequeo_bodega_detalle where idchequeobodega=" + idchequeo + " and cia=" + ControlSoftware.cia, "idusuario");
        for (int i = 0; i < ar.length; i++) {
            try {
                NumeroEnLetras n = new NumeroEnLetras();
                BaseDeDatos con = new BaseDeDatos();
                Connection conn = con.getConexion();
                // Cargar el reporte desde el archivo .jasper
                String path = "/check_bodega_final.jasper";
                InputStream inputStream = getClass().getResourceAsStream(path);
                JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("pedido", Productos.getValueAt(Productos.getSelectedRow(), 0));
                parametros.put("us", ar[i]);
                parametros.put("cia", ControlSoftware.cia);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);
                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setVisible(true);

            } catch (JRException ex) {
                System.out.println("Error al generar el reporte: " + ex.getMessage());
            }
        }
      //  impresion("" + Productos.getValueAt(Productos.getSelectedRow(), 0));


    }//GEN-LAST:event_jButton6ActionPerformed

    public void impresion(String orden) {

        try {
            String ar[] = bd.Llenar("select id_producto from detalle_pedido_chequeo_bodega where id_pedido_bodega=" + orden, "id_producto");

            PDDocument document = new PDDocument();

            for (int j = 0; j < ar.length; j++) {
                String p = ar[j];
                int x = Integer.parseInt(bd.valor("select cantidad from detalle_pedido_chequeo_bodega where id_pedido_bodega=" + orden + " and id_producto=" + p + " and cia=" + ControlSoftware.cia));
                String codletras = bd.valor("select codigo from producto where idproducto=" + p + " and cia=" + ControlSoftware.cia);
                String descripcion = bd.valor("select descripcion from producto where idproducto=" + p + " and cia=" + ControlSoftware.cia);
                String nombreSucursal = bd.valor("select abreviatura from company where id_company=" + ControlSoftware.cia);
                LocalDate fechaActual = LocalDate.now();
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yy");
                String fecha = fechaActual.format(formato);
                String Preciocompra = bd.valor("select preciocompra from producto where idproducto=" + p);
                String[] costoenletras1 = Preciocompra.split("", 0);
                String costoenletras = "";

                for (int i = 0; i < costoenletras1.length; i++) {
                    if (costoenletras1[i].equals("1")) {
                        costoenletras += "F";
                    }
                    if (costoenletras1[i].equals("2")) {
                        costoenletras += "R";
                    }
                    if (costoenletras1[i].equals("3")) {
                        costoenletras += "A";
                    }
                    if (costoenletras1[i].equals("4")) {
                        costoenletras += "N";
                    }
                    if (costoenletras1[i].equals("5")) {
                        costoenletras += "K";
                    }
                    if (costoenletras1[i].equals("6")) {
                        costoenletras += "L";
                    }
                    if (costoenletras1[i].equals("7")) {
                        costoenletras += "I";
                    }
                    if (costoenletras1[i].equals("8")) {
                        costoenletras += "H";
                    }
                    if (costoenletras1[i].equals("9")) {
                        costoenletras += "E";
                    }
                    if (costoenletras1[i].equals("0")) {
                        costoenletras += "C";
                    }
                    if (costoenletras1[i].equals(".")) {
                        costoenletras += ".";
                    }
                }

                for (int i = 0; i < x; i++) {
                    PDPage page = new PDPage(new PDRectangle(2 * 72, 1 * 72)); // Tamaño de la etiqueta en puntos (1 pulgada = 72 puntos)
                    document.addPage(page);

                    PDPageContentStream contentStream = new PDPageContentStream(document, page);
                    contentStream.setFont(PDType1Font.HELVETICA_BOLD, 10); // Tamaño de la fuente

                    // Coordenadas de inicio de la etiqueta
                    float startX = (page.getMediaBox().getWidth() - 2 * 72) / 2; // Margen izquierdo
                    float startY = 60; // Margen inferior

                    // Escribir el dato variable centrado
                    float datoVariableWidth = PDType1Font.HELVETICA_BOLD.getStringWidth("" + costoenletras + "  " + nombreSucursal + "  " + fecha) / 1000 * 10; // Ancho del texto en puntos
                    float datoVariableStartX = startX + (2 * 72 - datoVariableWidth) / 2; // Alinear al centro horizontal
                    contentStream.beginText();
                    contentStream.newLineAtOffset(datoVariableStartX, startY - 4);
                    contentStream.showText("" + costoenletras + "  " + nombreSucursal + "  " + fecha);
                    contentStream.endText();

                    // Generar código de barras
                    Code128Bean barcodeBean = new Code128Bean();
                    barcodeBean.setBarHeight(3f); // Aumenta la altura del código de barras
                    barcodeBean.setModuleWidth(0.25); // Aumenta el ancho del módulo del código de barras
                    barcodeBean.setQuietZone(2);
                    barcodeBean.setFontName("Arial Black"); // Cambiar el tipo de fuente

                    BitmapCanvasProvider canvasProvider = new BitmapCanvasProvider(1700, BufferedImage.TYPE_BYTE_BINARY, false, 0);
                    barcodeBean.generateBarcode(canvasProvider, codletras);
                    canvasProvider.finish();

                    // Guardar la imagen del código de barras en un archivo temporal
                    File tempFile = File.createTempFile("barcode", ".png");
                    ImageIO.write(canvasProvider.getBufferedImage(), "png", tempFile);

                    // Convertir la imagen del código de barras a PDImageXObject de PDFBox
                    PDImageXObject pdBarcodeImage = PDImageXObject.createFromFileByExtension(tempFile, document);

                    // Dibujar el código de barras centrado
                    float barcodeStartX = startX + (2 * 72 - 1.8f * 72) / 2; // Centro horizontal de la página
                    float barcodeStartY = startY - 45; // Ajustar la posición del código de barras
                    contentStream.drawImage(pdBarcodeImage, barcodeStartX, barcodeStartY, 1.8f * 72, 0.5f * 72);

                    // Escribir el código de barras variable centrado
                    float descriptionWidth = PDType1Font.HELVETICA_BOLD.getStringWidth(descripcion) / 1000 * 10; // Ancho del texto en puntos

                    float fontSize = 10;
                    while (descriptionWidth > 2 * 72 - 6 && fontSize > 1) {
                        fontSize -= 1;
                        contentStream.setFont(PDType1Font.HELVETICA_BOLD, fontSize);
                        descriptionWidth = PDType1Font.HELVETICA_BOLD.getStringWidth(descripcion) / 1000 * fontSize;
                    }
                    float descriptionStartX = startX + (2 * 72 - descriptionWidth) / 2; // Alinear al centro horizontal
                    float descriptionStartY = barcodeStartY - 10; // Ajustar la posición de la descripción del producto

                    contentStream.beginText();
                    contentStream.newLineAtOffset(descriptionStartX, descriptionStartY);
                    contentStream.showText(descripcion);
                    contentStream.endText();

                    contentStream.close();
                    System.out.println(i);
                }

            }

            document.save("etiquetas.pdf");
            document.close();

            System.out.println("Las etiquetas se han generado correctamente.");
        } catch (IOException e) {
            System.out.println("Error al generar las etiquetas: " + e.getMessage());
        }

        try {
            File archivoPDF = new File("etiquetas.pdf");
            if (archivoPDF.exists() && archivoPDF.isFile()) {
                Desktop desktop = Desktop.getDesktop();
                desktop.open(archivoPDF);
            } else {
                System.out.println("El archivo PDF no existe o no es válido.");
            }
        } catch (Exception e) {
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        String perm = "141";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de reanudar comprobantes de salida.");
            return;
        }
        if (Productos.getValueAt(Productos.getSelectedRow(), 5).equals("INGRESADA")) {
            chequeo_bodega_final l = new chequeo_bodega_final("" + Productos.getValueAt(Productos.getSelectedRow(), 0));
            Dimension internalFrameSize = l.getSize();
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                    (screenSize.height - internalFrameSize.height) / 2);
            DESKSOFTWARE.escritorio.add(l);
            l.show();
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "No se puede reanudar porque ya está procesado el chequeo");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        String perm = "141";
        if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
            JOptionPane.showMessageDialog(null, "Usted no tiene permiso de procesar comprobantes de salida.");
            return;
        }
        try {
            if (!Productos.getValueAt(Productos.getSelectedRow(), 5).equals("INGRESADA")) {
                JOptionPane.showMessageDialog(null, "Esta orden de pedido no puede ser chequeada");
                return;
            }
            String cod = "" + Productos.getValueAt(Productos.getSelectedRow(), 0);
            if (!bd.versiesta("select id from chequeo_bodega where idorden=" + cod + " and cia=" + ControlSoftware.cia)) {
                JOptionPane.showMessageDialog(null, "No se ha efectuado ningun chequeo");
            }
            String idchequeo = bd.valor("select id from chequeo_bodega where idorden=" + cod + " and cia=" + ControlSoftware.cia);
            String pedido[] = bd.Llenar("select id_detalle_orden_pedido from detalle_orden_de_pedido where id_orden_de_pedido='" + cod + "' and cia=" + ControlSoftware.cia, "id_detalle_orden_pedido");
            String chequeo[] = bd.Llenar("select id from chequeo_bodega_detalle where idchequeobodega='" + idchequeo + "' and cia=" + ControlSoftware.cia, "id");
            if (pedido.length != chequeo.length) {
                JOptionPane.showMessageDialog(null, "No se han ingresado todos los productos del pedido, no puede finalizarse.");
                return;
            }
            for (int i = 0; i < chequeo.length; i++) {
                for (int j = 0; j < pedido.length; j++) {
                    String prod = bd.valor("select idproducto from chequeo_bodega_detalle where id=" + chequeo[i] + " and cia=" + ControlSoftware.cia);
                    String qty = bd.valor("select cantidad from chequeo_bodega_detalle where id=" + chequeo[i]);
                    String prod2 = bd.valor("select idproducto from detalle_orden_de_pedido where id_detalle_orden_de_pedido=" + pedido[j]);
                    String qty2 = bd.valor("select cantidad from detalle_orden_de_pedido where id_detalle_orden_de_pedido=" + pedido[j]);
                    if (prod.equals(prod2)) {
                        if (Double.parseDouble(qty) < Double.parseDouble(qty2)) {
                            String codletras = bd.valor("select codigo from producto where idproducto=" + prod + " and cia=" + ControlSoftware.cia);
                            JOptionPane.showMessageDialog(null, "Hay un error, en el código: " + codletras + " se han detectado menos items que en la órden original.");
                            return;
                        }
                    }
                }
            }
            if (Productos.getValueAt(Productos.getSelectedRow(), 5).equals("INGRESADA")) {
                int g = JOptionPane.showConfirmDialog(null, "Está seguro que desea procesar el despacho?");
                if (g == 0) {
                    bd.EjecutarConsultas("update orden_de_pedido set estado=3 where cia=" + ControlSoftware.cia + " and idorden=" + Productos.getValueAt(Productos.getSelectedRow(), 0));
                    bd.EjecutarConsultas("update chequeo_bodega set estado=2, fechafinalchequeo='" + LocalDateTime.now() + "' where idorden=" + Productos.getValueAt(Productos.getSelectedRow(), 0));
                    String ar[] = bd.Llenar("select distinct(idusuario) from chequeo_bodega_detalle where idchequeobodega=" + idchequeo + " and cia=" + ControlSoftware.cia, "idusuario");
                    for (int i = 0; i < ar.length; i++) {
                        try {
                            NumeroEnLetras n = new NumeroEnLetras();
                            BaseDeDatos con = new BaseDeDatos();
                            Connection conn = con.getConexion();
                            // Cargar el reporte desde el archivo .jasper
                            String path = "/check_bodega_final.jasper";
                            InputStream inputStream = getClass().getResourceAsStream(path);
                            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(inputStream);
                            Map<String, Object> parametros = new HashMap<>();
                            parametros.put("pedido", Productos.getValueAt(Productos.getSelectedRow(), 0));
                            parametros.put("us", ar[i]);
                            parametros.put("cia", ControlSoftware.cia);
                            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, conn);
                            JasperViewer viewer = new JasperViewer(jasperPrint, false);
                            viewer.setVisible(true);

                        } catch (JRException ex) {
                            System.out.println("Error al generar el reporte: " + ex.getMessage());
                        }
                    }
                    jButton1.doClick();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Este chequeo de pedido ya fue procesado.");
                return;
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (Productos.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Ninguna fila seleccionada!");
            return;
        }
        int x = 0;
        x = Productos.getSelectedRow();
        if (x == -1) {
            return;
        }

        if (Productos.getValueAt(x, 5).equals("FINALIZADA")) {

            int usua = ControlSoftware.us;
            String role = bd.valor("select cod_role from usuario where cod_user=" + usua);
            try {

                int opc = JOptionPane.showConfirmDialog(null, "Está seguro de reversar este comprobante de bodega? se habilitará para ser modificado.");
                if (opc == 0) {
                    String perm = "142";
                    if (!bd.versiesta("select * from role_usuario inner join role on role.id=role_usuario.roleid inner join usuario on usuario.cod_user=role_usuario.usuarioid inner join role_permiso on role_permiso.roleid=role.id inner join permisos on permisos.id=role_permiso.permisoid where permisos.id=" + perm + " and role_usuario.cia=" + ControlSoftware.cia + " and usuario.cod_user=" + ControlSoftware.us)) {
                        JOptionPane.showMessageDialog(null, "Usted no tiene permiso de reversar comprobantes de salida.");
                        return;
                    }
                    bd.EjecutarConsultas("update chequeo_bodega set estado=1 where id=" + Productos.getValueAt(Productos.getSelectedRow(), 0));
                    jButton1.doClick();
                }

            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Esta orden no se puede reversar.");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        ModuloChequeos l = new ModuloChequeos();
        Dimension internalFrameSize = l.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        l.setLocation((screenSize.width - internalFrameSize.width) / 2,
                (screenSize.height - internalFrameSize.height) / 2);
        DESKSOFTWARE.escritorio.add(l);
        l.show();
        dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_chequeo_bodega_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_chequeo_bodega_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_chequeo_bodega_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mantenimiento_chequeo_bodega_final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mantenimiento_chequeo_bodega_final().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Productos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton chequeado;
    private javax.swing.JTextField cliente;
    private com.toedter.calendar.JDateChooser dfecha;
    private javax.swing.JTextField dnumero;
    private com.toedter.calendar.JDateChooser hfecha;
    private javax.swing.JTextField hnumero;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton ninguno;
    private javax.swing.JRadioButton pcliente;
    private javax.swing.JRadioButton pendientes;
    private javax.swing.JRadioButton pfecha;
    private javax.swing.JRadioButton pnumero;
    private javax.swing.JRadioButton todos;
    // End of variables declaration//GEN-END:variables
}
